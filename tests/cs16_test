#!/bin/python3

import sys
import time
import numpy as np
from matplotlib import pyplot as plt
import SoapySDR
print(SoapySDR, __file__)
from SoapySDR import *

#np.set_printoptions(threshold=sys.maxsize)

############################################################################################
# Settings
############################################################################################
# Data transfer settings
NUM_BUFF = 10
rx_chan = 0             # RX1 = 0, RX2 = 1
fs = 20e6            # Radio sample Rate
freq = 100e6            # LO tuning frequency in Hz
use_agc = True
timeout_us = int(10e6)
rx_resolution = 12
max_data = (1 << (rx_resolution -1))-1
print(max_data)

############################################################################################
# Receive Signal
############################################################################################
sdr = SoapySDR.Device() 
SoapySDR.setLogLevel(SOAPY_SDR_TRACE)

setting = sdr.readSetting("iq_swap")
print("read iq_swap", setting)

sdr.writeSetting("counter", "true")
setting = sdr.readSetting("counter")
print("read counter", setting)

sdr.setSampleRate(SOAPY_SDR_RX, rx_chan, fs)          # Set sample rate
sdr.setBandwidth(SOAPY_SDR_RX, rx_chan, fs)          # Set sample rate
sdr.setGainMode(SOAPY_SDR_RX, rx_chan, use_agc)       # Set the gain mode
sdr.setFrequency(SOAPY_SDR_RX, rx_chan, freq)         # Tune the LO

# Create data buffer and start streaming samples to it
rx_stream = sdr.setupStream(SOAPY_SDR_RX, SOAPY_SDR_CS16, [rx_chan])  # Setup data stream

N = sdr.getStreamMTU(rx_stream)

print("MTU", N)


rx_buff = np.empty([NUM_BUFF, (2 * N)], np.int16)                 # Create memory buffer for data stream

sdr.activateStream(rx_stream)  # this turns the radio on
for idx1 in range(NUM_BUFF):
    print("read block", idx1)

    # Read the samples from the data buffer
    sr = sdr.readStream(rx_stream, [rx_buff[idx1]], N, timeoutUs=timeout_us)

    rc = sr.ret # number of samples read or the error code
    assert rc == N, 'Error Reading Samples from Device (error code = %d)!' % rc

sdr.deactivateStream(rx_stream)


for i in range(NUM_BUFF):
    print("analyze block", i)
    print(rx_buff[i])
    expected = np.int16(rx_buff[i][0])
    #validate samples
    for j in range(((2 * N) - 1)):
        this_value = np.int16(rx_buff[i][j])

        if (this_value != expected):
            print(rx_buff[i])
            print("bad value", j, "expected", expected, "value", this_value)

            #error print the buffer around the error
            for k in range(-5, 5):
                print((j + k), " ", rx_buff[i][j+k])
            break

        expected = (this_value + 1)
        if expected == (max_data + 1):
            expected = -(max_data+1)

    if j >= ((2 * N - 1) - 1):
        print(" success")


# Stop streaming
sdr.closeStream(rx_stream)

